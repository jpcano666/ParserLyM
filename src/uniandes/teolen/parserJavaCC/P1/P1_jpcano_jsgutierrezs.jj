/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */
options
{
  static = true;
}

PARSER_BEGIN(P1_jpcano_jsgutierrezs)
package uniandes.teolen.parserJavaCC.P1;

import java.util.ArrayList;

public class P1_jpcano_jsgutierrezs
{

  private static ArrayList<String > variables = new ArrayList<String >();

  private static ArrayList<String > metodos = new ArrayList<String >();

  public static boolean buscarNombre(String a, ArrayList<String > list)
  {
	for(int i = 0; i < list.size(); ++i)
	{
	  if(a.equalsIgnoreCase(list.get(i)))
	  {
	    return true;
	  }
	}
	return false;
  }
  
  public static void main(String args []) throws ParseException
  {
    P1_jpcano_jsgutierrezs parser = new P1_jpcano_jsgutierrezs(System.in);
    while (true)
    {
      System.out.println("Reading from standard input...");
      System.out.print("Enter an expression like \"1+(2+3)*4;\" :");
      try
      {
      }
      catch (Exception e)
      {
        System.out.println("NOK.");
        System.out.println(e.getMessage());
        P1_jpcano_jsgutierrezs.ReInit(System.in);
      }
      catch (Error e)
      {
        System.out.println("Oops.");
        System.out.println(e.getMessage());
        break;
      }
    }
  }
}

PARSER_END(P1_jpcano_jsgutierrezs)

SKIP :
{
  " "
| "\r"
| "\t"
| "\n"
}

TOKEN:
{
  < IF : "if" >
| < VAR : "var" >
| < DEFINE : "define" >
| < PRINT : "print" >
| < SMALL : ["a"-"z"] >
| < LARGE : ["A"-"Z"] >
| < NAME : (< SMALL >)+(< LARGE >|< SMALL >)* >
}

TOKEN : /* OPERATORS */
{
  < PLUS : "+" >
| < MINUS : "-" >
| < MULTIPLY : "*" >
| < DIVIDE : "/" >
| < EQUALS : "=" >
| < MENOR : "< " >
| < MAYOR : " >" >
| < MAYORIG : "<=" >
| < MENORIG : " >=" >
| < IGUAL : "==" >
| < DISTINTO : "!=" > 
}

//12+12

TOKEN :
{
  < CONSTANT : (< DIGIT >)+ >
| < DIGIT : [ "0"-"9" ] >
}

void guardarVar() throws Error:
{
  Token t = null;
}
{
  t = < VAR > <NAME >"="(< CONSTANT >)*
  {
    String a = t.image;
    String[] f = a.split("=");
    String nombre = f[0].substring(3, f[0].length());

	if(buscarNombre(nombre, variables))
	{
	  throw new Error("La variable ya existe");
	}
	else if(nombre.equalsIgnoreCase("var"))
	{
	  throw new Error("La palabra var está reservada");
	}
	else
	{
	  variables.add(nombre);
	}
  }
}

void methods() throws Error:
{
  Token t;
}
{
  t = < DEFINE ><NAME >"("< NAME >|(","< NAME >)*"):"
  {
    String a = t.image;
    String[] f = a.split("(");
    String nombre = f[0].substring(6, f[0].length());

    if(buscarNombre(nombre, metodos))
    {
      throw new Error("Ya existe el nombre");
    }
    else if(nombre.equals("var"))
    {
      throw new Error("Var está reservado");
    }
    else
    {
      metodos.add(nombre);
    }
  }
}

