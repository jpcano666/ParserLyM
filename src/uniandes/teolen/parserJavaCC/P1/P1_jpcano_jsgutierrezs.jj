/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */options{  static = true;}PARSER_BEGIN(P1_jpcano_jsgutierrezs)package uniandes.teolen.parserJavaCC.P1;

import java.util.ArrayList;

public class P1_jpcano_jsgutierrezs{

  private static ArrayList<String > variables = new ArrayList<String >();

  public static boolean buscarNombre(String a)
  {
	for(int i = 0; i < variables.size(); ++i)
	{
	  if(a.equalsIgnoreCase(variables.get(i)))
	  {
	    return true;
	  }
	}
	return false;
  }
    public static void main(String args []) throws ParseException  {    P1_jpcano_jsgutierrezs parser = new P1_jpcano_jsgutierrezs(System.in);    while (true)    {      System.out.println("Reading from standard input...");      System.out.print("Enter an expression like \"1+(2+3)*4;\" :");      try      {        switch (P1_jpcano_jsgutierrezs.one_line())        {          case 0 :           System.out.println("OK.");          break;          case 1 :           System.out.println("Goodbye.");          break;          default :           break;        }      }      catch (Exception e)      {        System.out.println("NOK.");        System.out.println(e.getMessage());        P1_jpcano_jsgutierrezs.ReInit(System.in);      }      catch (Error e)      {        System.out.println("Oops.");        System.out.println(e.getMessage());        break;      }    }  }}PARSER_END(P1_jpcano_jsgutierrezs)SKIP :{  " "| "\r"| "\t"| "\n"}

TOKEN:
{  < IF : "if" >
| < VAR : "var" >
| < DEFINE : "define" >
| < PRINT : "print" >
| < SMALL : ["a"-"z"] >
| < LARGE : ["A"-"Z"] >
| < NAME : (< SMALL >)+(< LARGE >)* >
}TOKEN : /* OPERATORS */{  < PLUS : "+" >| < MINUS : "-" >| < MULTIPLY : "*" >| < DIVIDE : "/" >
| < EQUALS : "=" >
| < MENOR : "< " >
| < MAYOR : " >" >
| < MAYORIG : "<=" >
| < MENORIG : " >=" >
| < IGUAL : "==" >
| < DISTINTO : "!=" > }

//12+12TOKEN :{  < CONSTANT : (< DIGIT >)+ >| < #DIGIT : [ "0"-"9" ] >}

void guardarVar() throws Error:
{
  Token t;
 }{
  t = < VAR > <NAME >"="(< CONSTANT >)*
  {
    String a = t.image;
    String[] f = a.split("=");
    String nombre = f[0].substring(3, f[0].length());

	if(buscarNombre(nombre))
	{
	  throw new Error("La variable ya existe");
	}
	else if(nombre.equalsIgnoreCase("var"))
	{
	  throw new Error("La palabra var est√° reservada");
	}
	else
	{
	  variables.add(nombre);
	}
  }}
int one_line() :{
 	Token t;
 	String a = "Hola";

 	int c = 12 + 15;
 	System.out.println(c);
}{  sum() ";"  {
    a = "Perro";
    int b = 0;    return 0;  }| ";"  {    return 1;  }}void sum() :{}{  term()  (    (      < PLUS >    | < MINUS >    )    term()  )*}void term() :{}{  unary()  (    (      < MULTIPLY >    | < DIVIDE >    )    unary()  )*}void unary() :{}{  < MINUS > element()| element()}void element() :{}{  < CONSTANT >| "(" sum() ")"}
